name: release

on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-*'

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Build package using Poetry and store result
        uses: chaoss/grimoirelab-github-actions/build@master
        with:
          artifact-name: grimoirelab-dist
          artifact-path: dist

  tests:
    needs: [build]
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    name: Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # 3.1.0

      - name: Download distribution artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: grimoirelab-dist
          path: dist

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # v4.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.poetry/bin:$PATH" >> $GITHUB_ENV

      - name: Install dev dependencies
        run: |
          poetry install --only dev --no-root

      - name: Set MySQL mode
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql --host $DB_HOST --port $DB_PORT -uroot -proot -e "SET GLOBAL sql_mode = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'";

      - name: Test package backend
        run: |
          PACKAGE=`(cd dist && ls *whl)` && echo $PACKAGE
          poetry run pip install --pre ./dist/$PACKAGE
          poetry run python manage.py test --settings=grimoirelab.core.config.testing

  release:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Create a new release on the repository
        uses: chaoss/grimoirelab-github-actions/release@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

#  publish:
#    needs: [tests]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Publish the package on PyPI
#        uses: chaoss/grimoirelab-github-actions/publish@master
#        with:
#          artifact-name: grimoirelab-dist
#          artifact-path: dist
#          pypi-api-token: ${{ secrets.PYPI_API_TOKEN }}
